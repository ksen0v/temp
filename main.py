from aiogram import Bot, Dispatcher, F
import asyncio


from core.handlers.main_handlers import *

from config_loader import TOKEN, ADMIN_ID, MESSAGES
from core.pagiantion import Pagination
from core.states.main_states import BillStates, Abstract

import logging

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)


async def startup_bot(bot: Bot):
    try:
        await bot.send_message(ADMIN_ID, MESSAGES['startup_admin'])
        logger.info(f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É - {ADMIN_ID}')
    except Exception as e:
        logger.error(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –∞–¥–º–∏–Ω—É - {ADMIN_ID}. –û—à–∏–±–∫–∞: {e}')


async def main():
    bot = Bot(TOKEN, parse_mode='HTML')
    dp = Dispatcher()

    dp.startup.register(startup_bot)

    dp.message.register(get_start, F.text == '/start')
    dp.message.register(get_start, F.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    dp.message.register(top_up, F.text == 'üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å')
    dp.message.register(process_top_up_amount, BillStates.amount)
    dp.callback_query.register(top_up_by_card, F.data == 'top_up_by_card')
    dp.message.register(bill_proceed, BillStates.photo)
    dp.message.register(buy_gems, F.text == 'üç™ –ö—É–ø–∏—Ç—å V-–ë–∞–∫—Å—ã')
    dp.message.register(buy_pass, F.text == 'üç™ –ö—É–ø–∏—Ç—å –ë–ü –∏–ª–∏ –°—Ç–∞—Ä—Ç–µ—Ä –ü–∞–∫')
    dp.callback_query.register(no_money, F.data == 'no_money')
    dp.callback_query.register(top_up_query, F.data == 'top_up_by_card_two')
    dp.message.register(pay_out, F.text == 'üç™ –í—ã–≤–æ–¥')
    dp.message.register(support, F.text == 'üßë‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
    dp.callback_query.register(support_send_message, F.data == 'contact_support')
    dp.message.register(support_message_send_success, Abstract.temp)
    dp.message.register(profile, F.text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å')
    dp.callback_query.register(get_start, F.data == 'main_menu')
    dp.message.register(news, F.text == 'üì∞ –ù–æ–≤–æ—Å—Ç–Ω–∏–∫')
    dp.message.register(reviews, F.text == 'üòÄ –û—Ç–∑—ã–≤—ã')
    dp.message.register(buy_account, F.text == 'ü•∑ –ö—É–ø–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç')
    dp.callback_query.register(account_details, F.data.startswith('account_'))
    dp.callback_query.register(buy_account_pagination, Pagination.filter())

    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == '__main__':
    asyncio.run(main())
